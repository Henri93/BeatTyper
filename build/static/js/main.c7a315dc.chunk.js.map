{"version":3,"sources":["components/Voter.js","components/PostForm.js","components/Post.js","components/PostSection.js","index.js"],"names":["Voter","props","state","count","voteCount","handleUpVote","bind","handleDownVote","this","setState","onVoteChange","newCount","type","onClick","className","React","Component","PostForm","nameHolder","postContentHolder","name","postContent","isEnabled","handleNameChange","handlePostChange","handleSubmit","renderSubmitButton","event","target","value","onPostSubmit","preventDefault","disabled","onSubmit","onChange","placeholder","Post","showReplyForm","depth","replies","handleReplySubmit","handleVoteChange","handleReplyVoteChange","handleReply","renderReplyForm","vote","id","console","log","alert","prevState","key","Math","random","toString","substring","map","post","PostSection","posts","handlePostSubmit","postId","App"],"mappings":"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","file":"static/js/main.c7a315dc.chunk.js","sourcesContent":["import React from 'react'\n\nexport class Voter extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      count: this.props.voteCount\n    }\n\n    this.handleUpVote = this.handleUpVote.bind(this)\n    this.handleDownVote = this.handleDownVote.bind(this)\n  }\n\n  handleUpVote() {\n    const { count } = this.state\n    this.setState({\n      count: count + 1\n    })\n    this.props.onVoteChange(count + 1)\n  }\n\n  handleDownVote() {\n    const { count } = this.state\n    const newCount = count - 1 < 0 ? 0 : count - 1\n    this.setState({\n      count: newCount\n    })\n    this.props.onVoteChange(newCount)\n  }\n\n  render() {\n    const { count } = this.state\n    return (\n      <div>\n        <button\n          type='button'\n          onClick={this.handleUpVote}\n          className='btn btn-success btn-sm'>\n          ▲\n        </button>\n        <strong className='text-gray-dark'>{count}</strong>\n        <button\n          type='button'\n          onClick={this.handleDownVote}\n          className='btn btn-danger btn-sm'>\n          ▼\n        </button>\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nexport class PostForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      nameHolder: 'Name...',\n      postContentHolder: 'write something here',\n      name: '',\n      postContent: '',\n      isEnabled: false\n    }\n\n    this.handleNameChange = this.handleNameChange.bind(this)\n    this.handlePostChange = this.handlePostChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.renderSubmitButton = this.renderSubmitButton.bind(this)\n  }\n\n  handleNameChange(event) {\n    const name = event.target.value\n    if (name !== '' && this.state.postContent !== '') {\n      this.setState({ isEnabled: true })\n    } else {\n      this.setState({ isEnabled: false })\n    }\n    this.setState({ name: name })\n  }\n\n  handlePostChange(event) {\n    const postContent = event.target.value\n    if (this.state.name !== '' && postContent !== '') {\n      this.setState({ isEnabled: true })\n    } else {\n      this.setState({ isEnabled: false })\n    }\n    this.setState({ postContent: postContent })\n  }\n\n  handleSubmit(event) {\n    this.props.onPostSubmit(event, this.state.name, this.state.postContent)\n    this.setState({ name: '', postContent: '' })\n    event.preventDefault()\n  }\n\n  renderSubmitButton() {\n    if (this.state.isEnabled) {\n      return (\n        <button type='submit' className='btn btn-primary'>\n          Post\n        </button>\n      )\n    } else {\n      return (\n        <button type='submit' className='btn btn-primary' disabled>\n          Post\n        </button>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className='form-group'>\n          <input\n            className='form-control'\n            type='text'\n            name='name'\n            onChange={this.handleNameChange}\n            placeholder={this.state.nameHolder}\n            value={this.state.name}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            className='form-control'\n            type='text'\n            name='postContent'\n            onChange={this.handlePostChange}\n            placeholder={this.state.postContentHolder}\n            value={this.state.postContent}\n          />\n        </div>\n\n        {this.renderSubmitButton()}\n      </form>\n    )\n  }\n}\n","import React from 'react'\nimport { Voter } from './Voter'\nimport { PostForm } from './PostForm'\n\nexport class Post extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showReplyForm: false,\n      depth: this.props.depth,\n      replies: []\n    }\n\n    this.handleReplySubmit = this.handleReplySubmit.bind(this)\n    this.handleVoteChange = this.handleVoteChange.bind(this)\n    this.handleReplyVoteChange = this.handleReplyVoteChange.bind(this)\n    this.handleReply = this.handleReply.bind(this)\n    this.renderReplyForm = this.renderReplyForm.bind(this)\n  }\n\n  handleVoteChange(vote) {\n    this.props.onVoteChange(this.props.id, vote)\n  }\n\n  handleReplyVoteChange(vote) {\n    console.log('vote changed to ' + vote + ' for ' + this.props.id)\n  }\n\n  handleReplySubmit(event, name, postContent) {\n    if (this.state.depth + 1 >= 3) {\n      alert('Cannot go past 3 levels of depth!')\n    } else {\n      //create a new reply\n      this.setState(prevState => ({\n        replies: [\n          ...prevState.replies,\n          {\n            name: name,\n            postContent: postContent,\n            key:\n              Math.random()\n                .toString(36)\n                .substring(2, 15) +\n              Math.random()\n                .toString(36)\n                .substring(2, 15),\n            voteCount: 0,\n            depth: prevState.depth + 1\n          }\n        ]\n      }))\n      this.setState({ showReplyForm: false })\n    }\n  }\n\n  handleReply() {\n    const { showReplyForm } = this.state\n    this.setState({\n      showReplyForm: !showReplyForm\n    })\n  }\n\n  renderReplyForm() {\n    if (this.state.showReplyForm) {\n      return <PostForm onPostSubmit={this.handleReplySubmit} />\n    } else {\n      return null\n    }\n  }\n\n  render() {\n    return (\n      <div\n        className={\n          'post' + this.state.depth + ' my-3 p-3 bg-white rounded box-shadow'\n        }>\n        <div className='media-body pb-3 mb-0 small lh-125 border-bottom border-gray'>\n          <div className='d-flex justify-content-between align-items-center w-100'>\n            <strong className='text-gray-dark'>{this.props.name}</strong>\n            <Voter\n              onVoteChange={this.handleVoteChange}\n              voteCount={this.props.voteCount}\n            />\n          </div>\n          <div className='d-flex justify-content-between align-items-center w-100'>\n            <span className='d-block'>{this.props.postContent}</span>\n          </div>\n          <button\n            type='button'\n            onClick={this.handleReply}\n            className='btn btn-link'>\n            Reply\n          </button>\n        </div>\n\n        <div>\n          {this.state.replies.map(post => (\n            <Post\n              key={post.key}\n              id={post.key}\n              depth={post.depth}\n              name={post.name}\n              postContent={post.postContent}\n              voteCount={post.voteCount}\n              onVoteChange={this.handleReplyVoteChange}\n            />\n          ))}\n        </div>\n        {this.renderReplyForm()}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Post } from './Post'\nimport { PostForm } from './PostForm'\n\nexport class PostSection extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      posts: []\n    }\n\n    this.handlePostSubmit = this.handlePostSubmit.bind(this)\n    this.handleVoteChange = this.handleVoteChange.bind(this)\n  }\n\n  handlePostSubmit(event, name, postContent) {\n    //create a new post\n    this.setState(prevState => ({\n      posts: [\n        ...prevState.posts,\n        {\n          name: name,\n          postContent: postContent,\n          key:\n            Math.random()\n              .toString(36)\n              .substring(2, 15) +\n            Math.random()\n              .toString(36)\n              .substring(2, 15),\n          voteCount: 0,\n          depth: 0\n        }\n      ]\n    }))\n  }\n\n  handleVoteChange(postId, vote) {\n    console.log('vote changed to ' + vote + ' for ' + postId)\n  }\n\n  render() {\n    return (\n      <div className='d-flex align-items-center p-3 my-3 bg-purple rounded box-shadow'>\n        <div className='container'>\n          <div className='row justify-content-center'>\n            <h4 className='mb-0'>New Post</h4>\n          </div>\n          <div>\n            <PostForm onPostSubmit={this.handlePostSubmit} />\n\n            <div className='posts'>\n              {this.state.posts.map(post => (\n                <Post\n                  key={post.key}\n                  id={post.key}\n                  depth={post.depth}\n                  name={post.name}\n                  postContent={post.postContent}\n                  voteCount={post.voteCount}\n                  onVoteChange={this.handleVoteChange}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { PostSection } from './components/PostSection'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst App = () => (\n  <div className='col-md-12'>\n    <div className='d-flex align-items-center p-3 my-3 bg-purple rounded box-shadow'>\n      <div className='container'>\n        <div className='row justify-content-center'>\n          <h1 className='display-4'> CIS 197 MEMEPAGE </h1>\n        </div>\n      </div>\n    </div>\n\n    <PostSection />\n  </div>\n)\n\nexport default App\n"],"sourceRoot":""}